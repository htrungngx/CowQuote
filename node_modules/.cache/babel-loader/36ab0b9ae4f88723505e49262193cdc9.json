{"ast":null,"code":"import React from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nvar WebSocket = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(WebSocket, _React$Component);\n\n  function WebSocket(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      ws: new W3CWebSocket(_this.props.url),\n      attempts: 1\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_this));\n    _this.setupWebsocket = _this.setupWebsocket.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = WebSocket.prototype;\n\n  _proto.logging = function logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline);\n    }\n  };\n\n  _proto.generateInterval = function generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds;\n    }\n\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  };\n\n  _proto.setupWebsocket = function setupWebsocket() {\n    var _this2 = this;\n\n    var websocket = this.state.ws;\n\n    websocket.onopen = function () {\n      _this2.logging('Websocket connected...');\n\n      if (typeof _this2.props.onOpen === 'function') _this2.props.onOpen();\n    };\n\n    websocket.onerror = function (e) {\n      if (typeof _this2.props.onError === 'function') _this2.props.onError(e);\n    };\n\n    websocket.onmessage = function (evt) {\n      _this2.props.onMessage(evt.data);\n    };\n\n    this.shouldReconnect = this.props.reconnect;\n\n    websocket.onclose = function (evt) {\n      _this2.logging(\"Websocket disconnected,the reason: \" + evt.reason + \",the code: \" + evt.code);\n\n      if (typeof _this2.props.onClose === 'function') _this2.props.onClose(evt.code, evt.reason);\n\n      if (_this2.shouldReconnect) {\n        var time = _this2.generateInterval(_this2.state.attempts);\n\n        _this2.timeoutID = setTimeout(function () {\n          _this2.setState({\n            attempts: _this2.state.attempts + 1\n          });\n\n          _this2.setState({\n            ws: new W3CWebSocket(_this2.props.url)\n          });\n\n          _this2.setupWebsocket();\n        }, time);\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(this);\n    this.setupWebsocket();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var childRef = this.props.childRef;\n    childRef && childRef(undefined);\n    this.shouldReconnect = false;\n    clearTimeout(this.timeoutID);\n    var websocket = this.state.ws;\n    websocket.close();\n  };\n\n  _proto.sendMessage = function sendMessage(message) {\n    var websocket = this.state.ws;\n    websocket.send(message);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  };\n\n  return WebSocket;\n}(React.Component);\n\nexport { WebSocket };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,WAAD,CAAPA,CAAqBC,YAAxC;;IAEMC;;;EAAmC,mBAAYC,KAAZ,EAAmB;IAAA;;IAC1DC,oCAAMD,KAAN;IACEC,MAAKC,KAAL,GAAa;MACXC,EAAE,EAAE,IAAIP,YAAJ,CAAiBK,MAAKD,KAAL,CAAWI,GAA5B,CADO;MAEXC,QAAQ,EAAE;IAFC,CAAb;IAIAJ,MAAKK,WAAL,GAAmBL,MAAKK,WAAL,CAAiBC,IAAjB,+BAAnB;IACAN,MAAKO,cAAL,GAAsBP,MAAKO,cAAL,CAAoBD,IAApB,+BAAtB;IAPwD;EAQzD;;;;SAEDE,2BAAQC,OAAR,EAAiB;IACf,IAAI,KAAKV,KAAL,CAAWW,KAAX,KAAqB,IAAzB,EAA+B;MAC7BC,OAAO,CAACC,GAARD,CAAYF,OAAZE;IACD;EACF;;SAEDE,6CAAiBC,CAAjB,EAAoB;IAClB,IAAI,KAAKf,KAAL,CAAWgB,+BAAX,GAA6C,CAAjD,EAAoD;MAClD,OAAO,KAAKhB,KAAL,CAAWgB,+BAAlB;IACD;;IACD,OAAOC,IAAI,CAACC,GAALD,CAAS,EAATA,EAAaA,IAAI,CAACE,GAALF,CAAS,CAATA,EAAYF,CAAZE,IAAiB,CAA9BA,IAAmC,IAA1C;EACD;;SAEDT,2CAAiB;IAAA;;IACf,IAAIY,SAAS,GAAG,KAAKlB,KAAL,CAAWC,EAA3B;;IAEAiB,SAAS,CAACC,MAAVD,GAAmB,YAAM;MACvBE,MAAI,CAACb,OAAL,CAAa,wBAAb;;MACA,IAAI,OAAOa,MAAI,CAACtB,KAAL,CAAWuB,MAAlB,KAA6B,UAAjC,EAA6CD,MAAI,CAACtB,KAAL,CAAWuB,MAAX;IAF/C;;IAKAH,SAAS,CAACI,OAAVJ,GAAoB,aAAK;MACvB,IAAI,OAAOE,MAAI,CAACtB,KAAL,CAAWyB,OAAlB,KAA8B,UAAlC,EAA8CH,MAAI,CAACtB,KAAL,CAAWyB,OAAX,CAAmBC,CAAnB;IADhD;;IAIAN,SAAS,CAACO,SAAVP,GAAsB,eAAO;MAC3BE,MAAI,CAACtB,KAAL,CAAW4B,SAAX,CAAqBC,GAAG,CAACC,IAAzB;IADF;;IAIA,KAAKC,eAAL,GAAuB,KAAK/B,KAAL,CAAWgC,SAAlC;;IACAZ,SAAS,CAACa,OAAVb,GAAoB,eAAO;MACzBE,MAAI,CAACb,OAAL,yCACwCoB,GAAG,CAACK,MAD5C,mBACgEL,GAAG,CAACM,IADpE;;MAGA,IAAI,OAAOb,MAAI,CAACtB,KAAL,CAAWoC,OAAlB,KAA8B,UAAlC,EACEd,MAAI,CAACtB,KAAL,CAAWoC,OAAX,CAAmBP,GAAG,CAACM,IAAvB,EAA6BN,GAAG,CAACK,MAAjC;;MACF,IAAIZ,MAAI,CAACS,eAAT,EAA0B;QACxB,IAAIM,IAAI,GAAGf,MAAI,CAACR,gBAAL,CAAsBQ,MAAI,CAACpB,KAAL,CAAWG,QAAjC,CAAX;;QACAiB,MAAI,CAACgB,SAAL,GAAiBC,UAAU,CAAC,YAAM;UAChCjB,MAAI,CAACkB,QAAL,CAAc;YAAEnC,QAAQ,EAAEiB,MAAI,CAACpB,KAAL,CAAWG,QAAX,GAAsB;UAAlC,CAAd;;UACAiB,MAAI,CAACkB,QAAL,CAAc;YAAErC,EAAE,EAAE,IAAIP,YAAJ,CAAiB0B,MAAI,CAACtB,KAAL,CAAWI,GAA5B;UAAN,CAAd;;UACAkB,MAAI,CAACd,cAAL;QAHyB,GAIxB6B,IAJwB,CAA3B;MAKD;IAbH;EAeD;;SAEDI,iDAAoB;IAAA,IACVC,QADU,GACG,KAAK1C,KAAL,CAAb0C,QADU;IAElBA,QAAQ,IAAIA,QAAQ,CAAC,IAAD,CAApBA;IAEA,KAAKlC,cAAL;EACD;;SAEDmC,uDAAuB;IAAA,IACbD,QADa,GACA,KAAK1C,KAAL,CAAb0C,QADa;IAErBA,QAAQ,IAAIA,QAAQ,CAACE,SAAD,CAApBF;IAEA,KAAKX,eAAL,GAAuB,KAAvB;IACAc,YAAY,CAAC,KAAKP,SAAN,CAAZO;IAEA,IAAIzB,SAAS,GAAG,KAAKlB,KAAL,CAAWC,EAA3B;IACAiB,SAAS,CAAC0B,KAAV1B;EACD;;SAEDd,mCAAYyC,OAAZ,EAAqB;IACnB,IAAI3B,SAAS,GAAG,KAAKlB,KAAL,CAAWC,EAA3B;IACAiB,SAAS,CAAC4B,IAAV5B,CAAe2B,OAAf3B;EACD;;SAED6B,2BAAS;IACP,oBAAOC,gCAAP;EACD;;;CAlFGnD,CAAkBmD,KAAK,CAACC,SAAxBpD","names":["W3CWebSocket","require","w3cwebsocket","WebSocket","props","_this","state","ws","url","attempts","sendMessage","bind","setupWebsocket","logging","logline","debug","console","log","generateInterval","k","reconnectIntervalInMilliSeconds","Math","min","pow","websocket","onopen","_this2","onOpen","onerror","onError","e","onmessage","onMessage","evt","data","shouldReconnect","reconnect","onclose","reason","code","onClose","time","timeoutID","setTimeout","setState","componentDidMount","childRef","componentWillUnmount","undefined","clearTimeout","close","message","send","render","React","Component"],"sources":["/Users/htrung/React_Projects/messenger/node_modules/nextjs-websocket/src/index.js"],"sourcesContent":["import React from 'react'\n\nvar W3CWebSocket = require('websocket').w3cwebsocket;\n\nclass WebSocket extends React.Component {constructor(props) {\n  super(props);\n    this.state = {\n      ws: new W3CWebSocket(this.props.url),\n      attempts: 1\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.setupWebsocket = this.setupWebsocket.bind(this);\n  }\n\n  logging(logline) {\n    if (this.props.debug === true) {\n      console.log(logline);\n    }\n  }\n\n  generateInterval(k) {\n    if (this.props.reconnectIntervalInMilliSeconds > 0) {\n      return this.props.reconnectIntervalInMilliSeconds;\n    }\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  }\n\n  setupWebsocket() {\n    let websocket = this.state.ws;\n\n    websocket.onopen = () => {\n      this.logging('Websocket connected...');\n      if (typeof this.props.onOpen === 'function') this.props.onOpen();\n    };\n\n    websocket.onerror = e => {\n      if (typeof this.props.onError === 'function') this.props.onError(e);\n    };\n\n    websocket.onmessage = evt => {\n      this.props.onMessage(evt.data);\n    };\n\n    this.shouldReconnect = this.props.reconnect;\n    websocket.onclose = evt => {\n      this.logging(\n        `Websocket disconnected,the reason: ${evt.reason},the code: ${evt.code}`\n      );\n      if (typeof this.props.onClose === 'function')\n        this.props.onClose(evt.code, evt.reason);\n      if (this.shouldReconnect) {\n        let time = this.generateInterval(this.state.attempts);\n        this.timeoutID = setTimeout(() => {\n          this.setState({ attempts: this.state.attempts + 1 });\n          this.setState({ ws: new W3CWebSocket(this.props.url) });\n          this.setupWebsocket();\n        }, time);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { childRef } = this.props;\n    childRef && childRef(this);\n\n    this.setupWebsocket();\n  }\n\n  componentWillUnmount() {\n    const { childRef } = this.props;\n    childRef && childRef(undefined);\n\n    this.shouldReconnect = false;\n    clearTimeout(this.timeoutID);\n\n    let websocket = this.state.ws;\n    websocket.close();\n  }\n\n  sendMessage(message) {\n    let websocket = this.state.ws;\n    websocket.send(message);\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n\nexport {\n  WebSocket\n}"]},"metadata":{},"sourceType":"module"}